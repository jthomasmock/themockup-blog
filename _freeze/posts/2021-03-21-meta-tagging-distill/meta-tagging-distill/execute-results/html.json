{
  "hash": "dc0416221cdfb9cfc6b0be28c64f71a1",
  "result": {
    "markdown": "---\ntitle: \"Including and meta tagging extra content in a distill blog\"\ndescription: |\n  Collect and organize all your content, and then customize how it appears on social media.\nauthor: Thomas Mock\ndate: 03-21-2021\nimage: preview.png\ncategories:\n  - meta\n  - distill\n  - blog\n  - rmarkdown\n---\n\n\n\n![](preview.png)\n\nIncluding \"extra\" content in your blog is very useful for collecting all of your content beyond just blogposts. For example, I have a [Resources page](https://themockup.blog/resources.html) that sublinks to other things I've created or wanted to share at a specific URL.\n\n:::{.aside}\n\nHeader photo by <a href=\"https://unsplash.com/@jessedo81?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">jesse orrico</a> on <a href=\"/s/photos/organize?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\n\n:::\n\n![Image of themockup.blog/resources page](resources-page.png)\n\nThese extra pieces of content include `{xaringan}` slides, books, or one-off RMarkdown \"sites\" that don't really fit into a blogpost.\n\nMy approach is to store these extra pages into a new folder called `/static/` in my blog project directory. I do this to generally keep my top-level directory a bit cleaner, and to separate them out from the core blog. Note that lastly, you do not _need_ to put everything in `/static` if you don't want to, and you can keep everything at the top-level directory which would serve up content at `site-name.com/content-name.html`.\n\n## Including alternate content\n\nAs long as you are using `{distill}` v 1.2 or later and `{rmarkdown}` v 2.7 or later, you can include [alternate RMarkdown-generated content](https://rstudio.github.io/distill/website.html#alternate-formats) within your `{distill}` blog!\n\nAlternate format in this case really just means any other RMarkdown format _besides_ `{distill}`. \n\nNow while you can knit files locally and see the output, it will not be moved to your `_site` directory and served up on your website until you rebuild the site.\n\nThese alternate-format pages are rebuilt and included in the `_site` directory whenever you run `rmarkdown::render_site()` OR build one of the top-level site pages (ie `index.Rmd`, `about.Rmd`, etc).\n\nSo for my example, my `static` pages get written to:  \n`_site/static/FILE-NAME.HTML`\n\nand will show up on my blog at:  \n`themockup.blog/static/FILE-NAME.HTML`\n\nFor example my `{gt}` cookbook is linked at:  \n\n`https://themockup.blog/static/gt-cookbook.html`\n\nThat's easy enough, and now you can include basically any piece of arbitrary content you create via RMarkdown, all collected underneath the main URL of your blog/site!\n\n### Resources pane\n\nSince I'm on `{distill}`, to provide links for everything I want to add another \"tab\" to my site that shows all the various extra content. I add the below code to my navbar in my `_site.yaml` file to add a new tab.\n\n```\nnavbar:\n  right:\n    - text: \"Home\"\n      href: index.html\n    - text: \"Resources\"\n      href: resources.html\n    - text: \"About\"\n```\n\nThe resources page itself can be super lightweight and just link out to the files, but I decided to use a `{reactable}` table that references all of the content so it is searchable and sortable. This page is generated by my `resources.Rmd` file.\n\nAgain, you could just provide the raw URL links as hyperlinks to the various pieces of content, it's \"just another page\" so feel free to do whatever you want!\n\n## Tagging\n\nHaving various pieces of content sublinked on your blog generally makes them available to folks trying to access the content on the web. However, it's also a good idea to add \"tags\" to them so that they are organically discoverable via search engines. The other benefit is that tags can make your links display summary cards or other rich content on social media sites.\n\nAdding social cards/previews to one-off pieces of content and sub-pages of your blog can help a lot with engagement^[ In some cases, 2-3x more views/clicks per https://www.socialsongbird.com/2020/01/how-to-create-clickable-posts-on-social.html]. It also has the benefit of helping describe the linked content without having to embed ALL of the description into the body of the Tweet/LinkedIn post. Ultimately it's also more rewarding as rather than a bare link or a preview card without an image, you can explicitly decide what you want the preview to show!\n\n### Blogposts\n\nNow for most blogposts in `{distill}` you are able to get social preview cards \"for free\" in that they can just be added via some [extra lines in the YAML header](https://rstudio.github.io/distill/metadata.html#twitter-card). The `preview` argument turns into the preview image on the index page of your blog and in the meta tags. The title and description also get written into meta tags to be reused by social.\n\n```\n---\ntitle: \"JavaScript & D3\"\ndescription: Enhance communication with interactive visualizations \nbase_url: https://rstudio.github.io/distill\npreview: images/javascript-d3-preview.png\ntwitter:\n  site: \"@rstudio\"\n  creator: \"@fly_upside_down\"\n---\n```\n\n### `{distill}` home page\n\nHowever, notably the preview image option is missing from the MAIN page of your `{distill}` blog.\n\nYou can use the strategies outlined below with `{metathis}` or `<meta>` tags to create a nice tag/meta details for your `{distill}` homepage as well. \n\nWhile I'll be covering more details about `{metathis}` below, here is what my `index.Rmd` looks like that attaches `<meta>` tags via `{metathis}`\n\n\n```\n---\ntitle: \"Posts\"\nsite: distill::distill_website\nlisting: posts\n---\n\n{r, include=FALSE, results='asis'}\nlibrary(metathis)\n\nmeta() %>%\n  meta_social(\n    title = \"The MockUp Blog\",\n    description = \"Tom's musings on all things R\",\n    url = \"https://themockup.blog/\",\n    image = \"https://raw.githubusercontent.com/jthomasmock/radix_themockup/master/static/logo-plot.png\",\n    image_alt = \"Chaos into tidy code\",\n    og_type = \"website\",\n    og_author = \"Tom Mock\",\n    twitter_card_type = \"summary\",\n    twitter_creator = \"@thomas_mock\"\n  )\n\n```\n\n:::{.aside}\n\nOthers have written about social card/meta tags for [`{blogdown}`](https://bookdown.org/yihui/blogdown/), with examples from [Alison Hill](https://alison.rbind.io/post/2019-02-19-hugo-archetypes/), [Xavier A](https://xvrdm.github.io/2017/10/23/socialize-your-blogdown/), [Sharleen W.](https://sharleenw.rbind.io/2020/09/02/how-to-remake-a-blogdown-blog-from-scratch/), and [Len Kiefer](http://lenkiefer.com/2017/10/23/sharing-is-caring/).\n\n:::\n\n### Extra content\n\nThose built-in options work great for blogposts, but again I also have quite a few extra pieces of content, like my [`{gt}` cookbooks](https://themockup.blog/static/gt-cookbook.html), [`{xaringan}` slide decks](https://themockup.blog/static/slides/intro-tables-urban.html), or example [interactive tables](https://themockup.blog/static/100-women.html).\n\nFor these non-blog pages, they are essentially just bare RMarkdown sites. As such, often I need to manually add the `<meta>` tags that tell the various social pages \"what to do\" with the page as far as previews.\n\n### `<meta>` Tags\n\n`<meta>` tags are useful for search engine optimization (aka discoverability) of your content, for sharing on social media like LinkedIn or Twitter, or even messaging platforms like Slack, and generally helpful for accessibility. Garrick Aden-Buie recommended the Guide to `<meta>` and `<head>` details from [Josh Buchea](https://github.com/joshbuchea/HEAD). That sublinks to LOTS of great detail for specific social pages.\n\nPer [w3chools.com](https://www.w3schools.com/tags/tag_meta.asp):\n\n> The `<meta>` tag defines metadata about an HTML document. Metadata is data (information) about data.\n\n> Metadata is used by browsers (how to display content or reload page), search engines (keywords), and other web services.\n\nFurthermore, per the [Mozilla blog](https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML#other_types_of_metadata):\n\n> As you travel around the web, you'll find other types of metadata, too. A lot of the features you'll see on websites are proprietary creations, designed to provide certain sites (such as social networking sites) with specific pieces of information they can use.\n> \n> For example, Open Graph Data is a metadata protocol that Facebook invented to provide richer metadata for websites. \n> Twitter also has its own similar proprietary metadata called Twitter Cards, which has a similar effect when the site's URL is displayed on Twitter.com\n\n### Writing `<meta>` tags\n\nYou can always write `<meta>` tags by hand, and they aren't _overly_ complicated, as seen in the [Twitter Documentation](https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview/summary-card-with-large-image):  \n\n```\n<meta name=\"twitter:card\" content=\"summary_large_image\">\n<meta name=\"twitter:site\" content=\"@nytimes\">\n<meta name=\"twitter:creator\" content=\"@SarahMaslinNir\">\n<meta name=\"twitter:title\" content=\"Parade of Fans for Houston\">\n<meta name=\"twitter:description\" content=\"NEWARK - The guest list and parade of limousines with celebrities emerging from them seemed more suited to a red carpet event in Hollywood or New York than than a gritty stretch of Sussex Avenue near the former site of the James M. Baxter Terrace public housing project here.\">\n<meta name=\"twitter:image\" content=\"http://graphics8.nytimes.com/images/2012/02/19/us/19whitney-span/19whitney-span-articleLarge.jpg\">\n```\n\nHowever, thanks to [Garrick Aden-Buie](https://github.com/gadenbuie), you can save yourself a lot of effort and just use the [`{metathis}` package](https://pkg.garrickadenbuie.com/metathis/), which provides R functions to generate `<meta>` tags.\n\nFrom the documentation, here's an example of what a meta-tag generation looks like for the R4DS textbook.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(metathis)\n\nmeta() %>%\n  meta_description(\n    \"This book will teach you how to do data science with R...\"\n  ) %>% \n  meta_name(\"github-repo\" = \"hadley/r4ds\") %>% \n  meta_viewport() %>% \n  meta_social(\n    title = \"R for Data Science\",\n    url = \"https://r4ds.had.co.nz\",\n    image = \"https://r4ds.had.co.nz/cover.png\",\n    image_alt = \"The cover of the R4DS book\",\n    og_type = \"book\",\n    og_author = c(\"Garrett Grolemund\", \"Hadley Wickham\"),\n    twitter_card_type = \"summary\",\n    twitter_creator = \"@hadley\"\n  )\n```\n:::\n\nAnd the HTML output\n\n```\n#> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, orientation=auto\"/>\n#> <meta name=\"description\" content=\"This book will teach you how to do data science with R...\"/>\n#> <meta name=\"github-repo\" content=\"hadley/r4ds\"/>\n#> <meta name=\"twitter:title\" content=\"R for Data Science\"/>\n#> <meta name=\"twitter:description\" content=\"This book will teach you how to do data science with R...\"/>\n#> <meta name=\"twitter:url\" content=\"https://r4ds.had.co.nz\"/>\n#> <meta name=\"twitter:image:src\" content=\"https://r4ds.had.co.nz/cover.png\"/>\n#> <meta name=\"twitter:image:alt\" content=\"The cover of the R4DS book\"/>\n#> <meta name=\"twitter:card\" content=\"summary\"/>\n#> <meta name=\"twitter:creator\" content=\"@hadley\"/>\n#> <meta name=\"twitter:site\" content=\"@hadley\"/>\n#> <meta property=\"og:title\" content=\"R for Data Science\"/>\n#> <meta property=\"og:description\" content=\"This book will teach you how to do data science with R...\"/>\n#> <meta property=\"og:url\" content=\"https://r4ds.had.co.nz\"/>\n#> <meta property=\"og:image\" content=\"https://r4ds.had.co.nz/cover.png\"/>\n#> <meta property=\"og:image:alt\" content=\"The cover of the R4DS book\"/>\n#> <meta property=\"og:type\" content=\"book\"/>\n#> <meta property=\"og:locale\" content=\"en_US\"/>\n#> <meta property=\"article:author\" content=\"Garrett Grolemund\"/>\n#> <meta property=\"article:author\" content=\"Hadley Wickham\"/>\n```\n\nI prefer this to writing it all by hand, as it's less error prone than me typing it out manually!\n\n### `{metathis}` options\n\nAn aside that tripped me up is that the preview image needs to be linked as a URL, so you won't be able to just link to a local file, but rather the site or GitHub URL for that specific image.\n\nGenerally you can just write a RMarkdown chunk with `echo=FALSE` as you'd expect and put the `{metathis}` code in it.\n\n```\nmeta() %>% \n  meta_description(\"My awesome presentation\")\n```\n\nHowever, for some pieces of content you in RMarkdown there are already `<meta>` tags that are generated, or they need to explicitly need to be added into the header of the HTML file.\n\nIn that cases where the basic approach is not working, I recommend following Garrick's [`{metathis}` advice](https://pkg.garrickadenbuie.com/metathis/) from the readme.\n\nOption 1:  \n\n> Using [`metathis::include_meta()`](https://pkg.garrickadenbuie.com/metathis/reference/include_meta.html) to explicitly declare the `<meta>` tags as an HTML dependency  \n\nOption 2 (if all else fails):  \n\n> In other packages or situations, you can use `include_meta()` to explicitly declare the meta tags as an html dependency or use write_meta() to save the `<meta>` tags to an `.html` file that can be included via `includes: in_header` in the YAML of the RMarkdown doc. (In `blogdown`, consult your blogdown/hugo theme for the correct inclusion method.)\n\n```\nmeta() %>% \n  meta_description(\"A fantastic blog post\") %>% \n  write_meta(\"meta.html\")\n``` \n\nThat will generally solve most problems for including social tags in RMarkdown.\n\n## Optimal image sizes\n\nEach of the social sites have \"optimal\" sizes/ratios of the images, and [Hootsuite](https://blog.hootsuite.com/social-media-image-sizes-guide/) has a meta-guide of social media image sizing.\n\nThe short summary is, keep your image file size relatively small, as it'll cost less in bandwidth and is presented relatively small anyway on social. Twitter specifically will crop your images to a square for basic preview cards.\n\n## Confirm tags\n\nYou can \"check\" to make sure your tags worked by using tools like:  \n\n- [Twitter's Card Validator](https://cards-dev.twitter.com/validator?)  \n- [LinkedIn's Post Inspector](https://www.linkedin.com/post-inspector/inspect/)  \n- More generally, just doing a test post to your social feed  \n\nNote that if your website is too large, you can't always get the social \"crawlers\" to parse the page and return a preview. It's a good idea to keep your image sizes relatively low, and generally not include TOO much content in a single page.\n\nNow rather than getting a blank preview card, you can get nice previews!\n\n![Twitter Preview](twitter-preview.png)\n\n![LinkedIn Preview](linkedin-preview.png)\n\nSo go on and create your content, share it widely, and enjoy better previews/urls!\n\n:::{.callout-tip collapse=\"true\"}\n## Expand for Session Info\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.1.1 (2021-08-10)\n os       macOS Monterey 12.2.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       America/Chicago\n date     2022-04-25\n pandoc   2.18 @ /Applications/RStudio.app/Contents/MacOS/quarto/bin/tools/ (via rmarkdown)\n quarto   0.9.294 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n sessioninfo * 1.2.2   2021-12-06 [1] CRAN (R 4.1.1)\n\n [1] /Library/Frameworks/R.framework/Versions/4.1-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}