{
  "hash": "6e45fa5ba66e8acdfdc905c6ea32ed0a",
  "result": {
    "markdown": "---\ntitle: \"Pitch sequence aggregation\"\ndate: 2022-11-27\n---\n\n\n## Generate pitches\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ────────────────────────────────── tidyverse 1.3.2.9000 ──\n✔ ggplot2   3.4.0           ✔ dplyr     1.0.99.9000\n✔ tibble    3.1.8           ✔ stringr   1.4.1      \n✔ tidyr     1.2.1           ✔ forcats   0.5.1      \n✔ readr     2.1.3           ✔ lubridate 1.8.0      \n✔ purrr     0.3.5           \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\npitches <- c(\n  \"Two Seam FB\",\n  \"Cutter\",\n  \"Slider\",\n  \"Knuckleball\",\n  \"Change Up\"\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(37)\nfake_pitch <- tibble(\n  at_bat = rep(1:5, each = 3)\n) %>%\n  mutate(pitch_type = sample(pitches, size = 15, replace = TRUE))\n\n# include 1st pitch output\nfake_pitch %>%\n  group_by(at_bat) %>% \n  mutate(pitch_n = row_number()) %>% \n  mutate(\n    pitch_seq = slider::slide2_chr(\n      pitch_type,\n      pitch_n,\n      ~paste(.x,collapse = \"-\"),\n      .before = 1L\n    )\n  ) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 15 × 4\n   at_bat pitch_type  pitch_n pitch_seq              \n    <int> <chr>         <int> <chr>                  \n 1      1 Cutter            1 Cutter                 \n 2      1 Slider            2 Cutter-Slider          \n 3      1 Change Up         3 Slider-Change Up       \n 4      2 Knuckleball       1 Knuckleball            \n 5      2 Two Seam FB       2 Knuckleball-Two Seam FB\n 6      2 Knuckleball       3 Two Seam FB-Knuckleball\n 7      3 Knuckleball       1 Knuckleball            \n 8      3 Change Up         2 Knuckleball-Change Up  \n 9      3 Cutter            3 Change Up-Cutter       \n10      4 Knuckleball       1 Knuckleball            \n11      4 Slider            2 Knuckleball-Slider     \n12      4 Two Seam FB       3 Slider-Two Seam FB     \n13      5 Knuckleball       1 Knuckleball            \n14      5 Slider            2 Knuckleball-Slider     \n15      5 Slider            3 Slider-Slider          \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# output NA for 1st pitch\nfake_pitch %>%\n  group_by(at_bat) %>% \n  mutate(pitch_n = row_number()) %>% \n  mutate(\n    pitch_seq = slider::slide2_chr(\n      pitch_type,\n      pitch_n,\n      ~paste(.x,collapse = \"-\"),\n      .before = 1L,\n      .complete = TRUE # force complete measures (at least 2x pitches)\n    )\n  ) %>% \n  ungroup()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 15 × 4\n   at_bat pitch_type  pitch_n pitch_seq              \n    <int> <chr>         <int> <chr>                  \n 1      1 Cutter            1 <NA>                   \n 2      1 Slider            2 Cutter-Slider          \n 3      1 Change Up         3 Slider-Change Up       \n 4      2 Knuckleball       1 <NA>                   \n 5      2 Two Seam FB       2 Knuckleball-Two Seam FB\n 6      2 Knuckleball       3 Two Seam FB-Knuckleball\n 7      3 Knuckleball       1 <NA>                   \n 8      3 Change Up         2 Knuckleball-Change Up  \n 9      3 Cutter            3 Change Up-Cutter       \n10      4 Knuckleball       1 <NA>                   \n11      4 Slider            2 Knuckleball-Slider     \n12      4 Two Seam FB       3 Slider-Two Seam FB     \n13      5 Knuckleball       1 <NA>                   \n14      5 Slider            2 Knuckleball-Slider     \n15      5 Slider            3 Slider-Slider          \n```\n:::\n:::\n\n\n## Plot it\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(37)\n\nfake_pitch <- tibble(\n  at_bat = rep(c(1:5), each = 9),\n  batter = rep(rep(c(\"A.Name\", \"B.Name\", \"C.Name\"), each = 3), 5)\n) %>%\n  mutate(pitch_type = sample(pitches, size = 45, replace = TRUE))\n\nfake_pitch %>%\n  group_by(at_bat) %>% \n  mutate(pitch_n = row_number()) %>% \n  mutate(\n    pitch_seq = slider::slide2_chr(\n      pitch_type,\n      pitch_n,\n      ~paste(.x,collapse = \"-\"),\n      .before = 1L,\n      .complete = TRUE\n    )\n  ) %>% \n  ungroup() %>% \n  count(at_bat, pitch_seq) %>% \n  filter(!is.na(pitch_seq)) %>% \n  group_by(pitch_seq) %>% \n  mutate(roll_n = cumsum(n)) %>% \n  ggplot(aes(x = at_bat, y = roll_n, group = 1)) +\n  geom_step(aes(group = 1), direction = \"hv\") +\n  geom_point() +\n  facet_wrap(~pitch_seq) +\n  scale_y_continuous(limits = c(0, 5))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_path()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_path()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_path()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_path()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_path()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_path()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_path()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_path()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_path()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n```\n:::\n\n::: {.cell-output-display}\n![](pitches_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::",
    "supporting": [
      "pitches_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}